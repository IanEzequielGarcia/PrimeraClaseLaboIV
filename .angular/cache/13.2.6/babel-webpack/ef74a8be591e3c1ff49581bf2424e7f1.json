{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Ianch\\\\OneDrive\\\\Escritorio\\\\ESCUELA\\\\Programacion o escuela\\\\PRIMERCUATRIMESTRE2022\\\\LABOIV\\\\PrimeraClase\\\\PrimeraClaseLaboIV\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/authentication-service\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginPage {\n  constructor(authService, authServiceLogin, router) {\n    this.authService = authService;\n    this.authServiceLogin = authServiceLogin;\n    this.router = router;\n  }\n\n  ngOnInit() {}\n\n  logIn(email, password) {\n    this.authService.SignIn(email.value, password.value).then(res => {\n      window.alert('Logueado Correctamente');\n    }).catch(error => {\n      window.alert(error.message);\n      return null;\n    });\n  }\n\n  registro(email, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(email.value + password.value);\n\n      _this.authService.RegisterUser(email.value, password.value).then(res => {\n        window.alert('Registrado Correctamente');\n      }).catch(error => {\n        window.alert(error.message);\n        return null;\n      });\n    })();\n  }\n\n  logInGoogle() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.authServiceLogin.logInGoogle().then(res => {\n        window.alert('Logueado Correctamente');\n      }).catch(error => {\n        window.alert(error.message);\n        return null;\n      });\n    })();\n  }\n\n}\n\nLoginPage.ɵfac = function LoginPage_Factory(t) {\n  return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nLoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPage,\n  selectors: [[\"app-login\"]],\n  decls: 37,\n  vars: 0,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css\"], [\"action\", \"#\", \"id\", \"login-form\"], [1, \"heading\"], [1, \"left\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\"], [\"email\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"pass\"], [\"password\", \"\"], [\"type\", \"submit\", \"value\", \"Login\", 3, \"click\"], [2, \"font-size\", \"1em\"], [2, \"color\", \"blue\", \"text-decoration\", \"underline\", \"font-size\", \"1em\", \"cursor\", \"pointer\", 3, \"click\"], [1, \"right\"], [1, \"connect\"], [1, \"google-plus\", 3, \"click\"], [1, \"fontawesome-google-plus\"], [\"aria-hidden\", \"true\", 1, \"bi\", \"bi-google\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3)(5, \"link\", 4);\n      i0.ɵɵelementStart(6, \"title\");\n      i0.ɵɵtext(7, \"Ian Garcia\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"body\")(9, \"form\", 5)(10, \"div\", 6);\n      i0.ɵɵtext(11, \"Registro/Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\")(16, \"input\", 9, 10)(18, \"br\");\n      i0.ɵɵelementStart(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\")(22, \"input\", 12, 13)(24, \"br\");\n      i0.ɵɵelementStart(25, \"input\", 14);\n      i0.ɵɵlistener(\"click\", function LoginPage_Template_input_click_25_listener() {\n        i0.ɵɵrestoreView(_r2);\n\n        const _r0 = i0.ɵɵreference(17);\n\n        const _r1 = i0.ɵɵreference(23);\n\n        return ctx.logIn(_r0, _r1);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵelementStart(27, \"label\", 15);\n      i0.ɵɵtext(28, \"No tenes cuenta? \");\n      i0.ɵɵelementStart(29, \"a\", 16);\n      i0.ɵɵlistener(\"click\", function LoginPage_Template_a_click_29_listener() {\n        i0.ɵɵrestoreView(_r2);\n\n        const _r0 = i0.ɵɵreference(17);\n\n        const _r1 = i0.ɵɵreference(23);\n\n        return ctx.registro(_r0, _r1);\n      });\n      i0.ɵɵtext(30, \"Registrate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 17)(32, \"div\", 18);\n      i0.ɵɵtext(33, \"Entrar con\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"a\", 19);\n      i0.ɵɵlistener(\"click\", function LoginPage_Template_a_click_34_listener() {\n        return ctx.logInGoogle();\n      });\n      i0.ɵɵelementStart(35, \"span\", 20);\n      i0.ɵɵelement(36, \"i\", 21);\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n  styles: [\"[class*=fontawesome-][_ngcontent-%COMP%]:before {\\n  font-family: \\\"FontAwesome\\\", sans-serif;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  background: -owg-linear-gradient(left, #272838, #2b2d41, #393549, #433545);\\n  background: linear-gradient(left, #272838, #2b2d41, #393549, #433545);\\n  font-family: \\\"Raleway\\\", sans-serif;\\n}\\n\\nform#login-form[_ngcontent-%COMP%] {\\n  background: #fff;\\n  width: 40em;\\n  margin: 2em auto;\\n  overflow: hidden;\\n  position: relative;\\n  border-radius: 0.3em;\\n  box-shadow: 0 0 0.2em #000;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]   div.heading[_ngcontent-%COMP%] {\\n  background: #f85f64;\\n  color: #fff;\\n  text-align: center;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  padding: 1.5em;\\n  font-size: 1.1em;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]   div.left[_ngcontent-%COMP%] {\\n  width: 45%;\\n  float: left;\\n  padding: 1.7em 1.5em 2.5em 1.5em;\\n  box-sizing: border-box;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]   div.right[_ngcontent-%COMP%] {\\n  width: 45%;\\n  float: right;\\n  padding: 1.7em 1.5em 2.5em 1.5em;\\n  box-sizing: border-box;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]:before, form#login-form[_ngcontent-%COMP%]:after {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  margin: auto;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]:before {\\n  content: \\\"or\\\";\\n  color: gray;\\n  height: 0.5em;\\n  width: 0.5em;\\n  top: 1.75em;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]:after {\\n  content: \\\"\\\";\\n  background: rgba(128, 128, 128, 0.3);\\n  height: 8em;\\n  width: 0.12em;\\n  top: -7em;\\n  left: 0.5em;\\n  z-index: 900;\\n  box-shadow: 0 9.6em 0 0 rgba(128, 128, 128, 0.3);\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  color: gray;\\n  font-size: 1.1em;\\n  margin-top: 0.6em;\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%], div.left[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%] {\\n  border: 0.1em solid #dfdfdf;\\n  padding: 1em;\\n  margin: 0.6em 0;\\n  max-width: 88.5%;\\n  border-radius: 0.2em;\\n  box-shadow: 0 0 0.2em rgba(223, 223, 223, 0.2);\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]:focus, div.left[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border: 0.1em solid #919191;\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   input[type=submit][_ngcontent-%COMP%] {\\n  background: #f85f64;\\n  color: #fff;\\n  outline: none;\\n  text-transform: uppercase;\\n  padding: 1.2em;\\n  overflow: hidden;\\n  border: none;\\n  letter-spacing: 0.1em;\\n  margin: 0.5em 0;\\n  font-weight: bold;\\n  border-radius: 0.4em;\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   input[type=submit][_ngcontent-%COMP%]:hover {\\n  background: rgba(248, 95, 100, 0.8);\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   div.connect[_ngcontent-%COMP%] {\\n  color: gray;\\n  font-size: 1.1em;\\n  text-align: center;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  font-size: 1.5em;\\n  text-decoration: none;\\n  color: white;\\n  width: 9em;\\n  padding: 0.55em 0.3em;\\n  clear: both;\\n  text-align: center;\\n  margin: 0.5em 0.1em;\\n  border-radius: 0.3em;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.facebook[_ngcontent-%COMP%] {\\n  background: #3a589a;\\n  margin-top: 0.8em;\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.facebook[_ngcontent-%COMP%]:hover {\\n  background: rgba(58, 88, 154, 0.8);\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.twitter[_ngcontent-%COMP%] {\\n  background: #4099ff;\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.twitter[_ngcontent-%COMP%]:hover {\\n  background: rgba(64, 153, 255, 0.8);\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.google-plus[_ngcontent-%COMP%] {\\n  background: #e9544f;\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.google-plus[_ngcontent-%COMP%]:hover {\\n  background: rgba(233, 84, 79, 0.8);\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"]\n});","map":{"version":3,"sources":["C:/Users/Ianch/OneDrive/Escritorio/ESCUELA/Programacion o escuela/PRIMERCUATRIMESTRE2022/LABOIV/PrimeraClase/PrimeraClaseLaboIV/src/app/login/login.page.ts"],"names":["i0","i1","i2","i3","i4","LoginPage","constructor","authService","authServiceLogin","router","ngOnInit","logIn","email","password","SignIn","value","then","res","window","alert","catch","error","message","registro","console","log","RegisterUser","logInGoogle","ɵfac","LoginPage_Factory","t","ɵɵdirectiveInject","AuthenticationService","AuthService","Router","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginPage_Template_input_click_25_listener","ɵɵrestoreView","_r0","ɵɵreference","_r1","LoginPage_Template_a_click_29_listener","LoginPage_Template_a_click_34_listener","directives","ɵNgNoValidate","NgControlStatusGroup","NgForm","styles"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../shared/authentication-service\";\r\nimport * as i2 from \"../services/auth.service\";\r\nimport * as i3 from \"@angular/router\";\r\nimport * as i4 from \"@angular/forms\";\r\nexport class LoginPage {\r\n    constructor(authService, authServiceLogin, router) {\r\n        this.authService = authService;\r\n        this.authServiceLogin = authServiceLogin;\r\n        this.router = router;\r\n    }\r\n    ngOnInit() { }\r\n    logIn(email, password) {\r\n        this.authService.SignIn(email.value, password.value)\r\n            .then((res) => {\r\n            window.alert('Logueado Correctamente');\r\n        }).catch((error) => {\r\n            window.alert(error.message);\r\n            return null;\r\n        });\r\n    }\r\n    async registro(email, password) {\r\n        console.log(email.value + password.value);\r\n        this.authService.RegisterUser(email.value, password.value)\r\n            .then((res) => {\r\n            window.alert('Registrado Correctamente');\r\n        }).catch((error) => {\r\n            window.alert(error.message);\r\n            return null;\r\n        });\r\n    }\r\n    async logInGoogle() {\r\n        this.authServiceLogin.logInGoogle()\r\n            .then((res) => {\r\n            window.alert('Logueado Correctamente');\r\n        }).catch((error) => {\r\n            window.alert(error.message);\r\n            return null;\r\n        });\r\n    }\r\n}\r\nLoginPage.ɵfac = function LoginPage_Factory(t) { return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router)); };\r\nLoginPage.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LoginPage, selectors: [[\"app-login\"]], decls: 37, vars: 0, consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css\"], [\"action\", \"#\", \"id\", \"login-form\"], [1, \"heading\"], [1, \"left\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\"], [\"email\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"pass\"], [\"password\", \"\"], [\"type\", \"submit\", \"value\", \"Login\", 3, \"click\"], [2, \"font-size\", \"1em\"], [2, \"color\", \"blue\", \"text-decoration\", \"underline\", \"font-size\", \"1em\", \"cursor\", \"pointer\", 3, \"click\"], [1, \"right\"], [1, \"connect\"], [1, \"google-plus\", 3, \"click\"], [1, \"fontawesome-google-plus\"], [\"aria-hidden\", \"true\", 1, \"bi\", \"bi-google\"]], template: function LoginPage_Template(rf, ctx) { if (rf & 1) {\r\n        const _r2 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\r\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3)(5, \"link\", 4);\r\n        i0.ɵɵelementStart(6, \"title\");\r\n        i0.ɵɵtext(7, \"Ian Garcia\");\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(8, \"body\")(9, \"form\", 5)(10, \"div\", 6);\r\n        i0.ɵɵtext(11, \"Registro/Login\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 8);\r\n        i0.ɵɵtext(14, \"Email\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(15, \"br\")(16, \"input\", 9, 10)(18, \"br\");\r\n        i0.ɵɵelementStart(19, \"label\", 11);\r\n        i0.ɵɵtext(20, \"Password\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(21, \"br\")(22, \"input\", 12, 13)(24, \"br\");\r\n        i0.ɵɵelementStart(25, \"input\", 14);\r\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_input_click_25_listener() { i0.ɵɵrestoreView(_r2); const _r0 = i0.ɵɵreference(17); const _r1 = i0.ɵɵreference(23); return ctx.logIn(_r0, _r1); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(26, \"br\");\r\n        i0.ɵɵelementStart(27, \"label\", 15);\r\n        i0.ɵɵtext(28, \"No tenes cuenta? \");\r\n        i0.ɵɵelementStart(29, \"a\", 16);\r\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_a_click_29_listener() { i0.ɵɵrestoreView(_r2); const _r0 = i0.ɵɵreference(17); const _r1 = i0.ɵɵreference(23); return ctx.registro(_r0, _r1); });\r\n        i0.ɵɵtext(30, \"Registrate\");\r\n        i0.ɵɵelementEnd()()();\r\n        i0.ɵɵelementStart(31, \"div\", 17)(32, \"div\", 18);\r\n        i0.ɵɵtext(33, \"Entrar con\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(34, \"a\", 19);\r\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_a_click_34_listener() { return ctx.logInGoogle(); });\r\n        i0.ɵɵelementStart(35, \"span\", 20);\r\n        i0.ɵɵelement(36, \"i\", 21);\r\n        i0.ɵɵelementEnd()()()()()();\r\n    } }, directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm], styles: [\"[class*=fontawesome-][_ngcontent-%COMP%]:before {\\n  font-family: \\\"FontAwesome\\\", sans-serif;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  background: -owg-linear-gradient(left, #272838, #2b2d41, #393549, #433545);\\n  background: linear-gradient(left, #272838, #2b2d41, #393549, #433545);\\n  font-family: \\\"Raleway\\\", sans-serif;\\n}\\n\\nform#login-form[_ngcontent-%COMP%] {\\n  background: #fff;\\n  width: 40em;\\n  margin: 2em auto;\\n  overflow: hidden;\\n  position: relative;\\n  border-radius: 0.3em;\\n  box-shadow: 0 0 0.2em #000;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]   div.heading[_ngcontent-%COMP%] {\\n  background: #f85f64;\\n  color: #fff;\\n  text-align: center;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  padding: 1.5em;\\n  font-size: 1.1em;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]   div.left[_ngcontent-%COMP%] {\\n  width: 45%;\\n  float: left;\\n  padding: 1.7em 1.5em 2.5em 1.5em;\\n  box-sizing: border-box;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]   div.right[_ngcontent-%COMP%] {\\n  width: 45%;\\n  float: right;\\n  padding: 1.7em 1.5em 2.5em 1.5em;\\n  box-sizing: border-box;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]:before, form#login-form[_ngcontent-%COMP%]:after {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  margin: auto;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]:before {\\n  content: \\\"or\\\";\\n  color: gray;\\n  height: 0.5em;\\n  width: 0.5em;\\n  top: 1.75em;\\n}\\n\\nform#login-form[_ngcontent-%COMP%]:after {\\n  content: \\\"\\\";\\n  background: rgba(128, 128, 128, 0.3);\\n  height: 8em;\\n  width: 0.12em;\\n  top: -7em;\\n  left: 0.5em;\\n  z-index: 900;\\n  box-shadow: 0 9.6em 0 0 rgba(128, 128, 128, 0.3);\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  color: gray;\\n  font-size: 1.1em;\\n  margin-top: 0.6em;\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%], div.left[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%] {\\n  border: 0.1em solid #dfdfdf;\\n  padding: 1em;\\n  margin: 0.6em 0;\\n  max-width: 88.5%;\\n  border-radius: 0.2em;\\n  box-shadow: 0 0 0.2em rgba(223, 223, 223, 0.2);\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]:focus, div.left[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border: 0.1em solid #919191;\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   input[type=submit][_ngcontent-%COMP%] {\\n  background: #f85f64;\\n  color: #fff;\\n  outline: none;\\n  text-transform: uppercase;\\n  padding: 1.2em;\\n  overflow: hidden;\\n  border: none;\\n  letter-spacing: 0.1em;\\n  margin: 0.5em 0;\\n  font-weight: bold;\\n  border-radius: 0.4em;\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.left[_ngcontent-%COMP%]   input[type=submit][_ngcontent-%COMP%]:hover {\\n  background: rgba(248, 95, 100, 0.8);\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   div.connect[_ngcontent-%COMP%] {\\n  color: gray;\\n  font-size: 1.1em;\\n  text-align: center;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  font-size: 1.5em;\\n  text-decoration: none;\\n  color: white;\\n  width: 9em;\\n  padding: 0.55em 0.3em;\\n  clear: both;\\n  text-align: center;\\n  margin: 0.5em 0.1em;\\n  border-radius: 0.3em;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.facebook[_ngcontent-%COMP%] {\\n  background: #3a589a;\\n  margin-top: 0.8em;\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.facebook[_ngcontent-%COMP%]:hover {\\n  background: rgba(58, 88, 154, 0.8);\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.twitter[_ngcontent-%COMP%] {\\n  background: #4099ff;\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.twitter[_ngcontent-%COMP%]:hover {\\n  background: rgba(64, 153, 255, 0.8);\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.google-plus[_ngcontent-%COMP%] {\\n  background: #e9544f;\\n  transition: 0.15s all ease-in-out;\\n}\\n\\ndiv.right[_ngcontent-%COMP%]   a.google-plus[_ngcontent-%COMP%]:hover {\\n  background: rgba(233, 84, 79, 0.8);\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"] });\r\n"]},"metadata":{},"sourceType":"module"}